
<c:setVariable select="/tables" var="tables" />

<c:load url="models/jobspec.xml" urlContext="gramar" var="jobspec" type="xml" />
<c:setVariable select="$jobspec/jobspec/modcos" var="modcos" />
<c:setVariable select="$jobspec/jobspec/workflow" var="workflow" />

<c:iterate select="$modcos/modco" var="modco">
	<c:set select="$modco" name="connect"><c:get select="$modco/@server"/>;database=<c:get select="$modco/@db"/></c:set>
</c:iterate>

<c:iterate select="$workflow/subflow" var="subflow">
	<c:set select="$subflow" name="workflowXml">yieldIngestWorkflow-<c:get select="$subflow/@key"/></c:set>
	<c:set select="$subflow" name="workflowName">Ingest-<c:get select="$subflow/@key"/></c:set>
	<c:set select="$subflow" name="end">End-<c:get select="$subflow/@key"/>-Ingest</c:set>
</c:iterate>


<c:load url="/Sandbox/ingest.xml" urlContext="workspace" var="ingest" type="xml" />
<c:setVariable select="$ingest/*" var="ingest" />

<c:iterate select="$ingest/join" var="join" >
	<c:iterate select="$join/table" var="table" >
		<c:set select="$table" name="id"><c:get select="$tables/table[@name=$table/@name]/column/@name" /></c:set>
		<c:set select="$table" name="first">false</c:set>
		<c:iterate select="$tables/table[@name=$table/@name]/column" var="column">
			<c:copyElement select="$column" toSelect="$table" name="column" />
		</c:iterate>
	</c:iterate>
	<c:set select="$join/table" name="first">true</c:set>
	<c:iterate select="$join/table" var="table" >
		<c:if test="$table/@first='false'" >
			<c:removeElement select="$table/column" />
		</c:if>
	</c:iterate>
</c:iterate>

<c:iterate select="$tables/table" var="table">
	<c:set select="$table" name="enabled">false</c:set>
	<c:if test="$ingest/table[@name=$table/@name]">
		<c:set select="$table" name="enabled">true</c:set>
		<c:set select="$table" name="slices"><c:get select="$ingest/table[@name=$table/@name]/@slices"/></c:set>
	</c:if>
</c:iterate>

<c:newModel var="sandbox" name="sandbox" />
<c:set select="$sandbox" name="jobsSource">
<jobs>
<c:iterate select="$tables/table[@enabled='true']" var="table" >
	<hive table="<c:get select="$table/@hive_name"/>">Create External table IF NOT EXISTS <c:get select="$workflow/@database"/>.<c:get select="$table/@hive_name"/> (<c:iterate select="$table/column" var="column"><c:get select="$column/@hive_name"/> <c:get select="$column/@type"/>, </c:iterate> org_id int, org_name varchar(10)<c:iterate select="$ingest/table[@name=$table/@name]/update" var="update">, <c:get select="$update/@name"/> <c:get select="$update/@type"/> </c:iterate>) row format delimited fields terminated by '\t' lines terminated by '\n' stored as textfile location '/<c:get select="$workflow/@database"/>/<c:get select="$table/@hive_name"/>'</hive>
<c:iterate select="$modcos/modco" var="modco" >
<c:setVariable select=" ceiling(number($table/@slices) * number($modco/@weight))" var="slices" />
<c:if test=" c:lessThan(number($workflow/@maxSlices),$slices) " >
    <c:log severity="warning">[<c:get select="$table/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/> V-> <c:get select="number($workflow/@maxSlices)"/></c:log>
    <c:setVariable select=" number($workflow/@maxSlices) " var="slices"/>
</c:if>
<c:if test=" c:lessThan(1,$slices)" >
	<c:if test=" c:lessThan($slices, number($workflow/@padSlices))" >
	    <c:log severity="warning">[<c:get select="$table/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/> A-> <c:get select="number($workflow/@padSlices)"/></c:log>
    	<c:setVariable select=" number($workflow/@padSlices) " var="slices"/>
	</c:if>
    <c:log severity="info">[<c:get select="$table/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/></c:log>
</c:if>
	<job name="<c:get select="$table/@name" />-Ingest-<c:get select="$modco/@name" />" slices="<c:get select="$slices" />" splitBy="<c:get select="$table/column/@name"/>"  source="<c:get select="$modco/@name" />"  sourceDB="<c:get select="$modco/@db" />"  sourceTable="<c:get select="$table/@name"/>"  targetTable="<c:get select="$table/@hive_name"/>"  connect="<c:get select="$modco/@connect"/>"  user="<c:get select="$modco/@user"/>"  pass="<c:get select="$modco/@pass"/>"  prefix="job_<c:get select="$modco/@db" />_<c:get select="$table/@name" />"  >
		<targetDir>/<c:get select="$workflow/@database"/>/<c:get select="$table/@hive_name"/>/<c:get select="$modco/@name" /></targetDir>
		<query><![CDATA[SELECT <c:iterate select="$table/column" var="column"><c:get select="$column/@name"/>,</c:iterate> <c:get select="$modco/@id" /> as "org_id",  '<c:get select="$modco/@name" />' as "org_name" <c:iterate select="$ingest/table[@name=$table/@name]/update" var="update">, (<c:get select="$update/calc" />) as "<c:get select="$update/@name"/>" </c:iterate>  FROM dbo.<c:get select="$table/@name"/> WHERE ( $CONDITIONS ) ]]></query>
	</job>
</c:iterate>
</c:iterate>
<c:iterate select="$ingest/join" var="join" >
	<hive table="<c:get select="$join/@name"/>">Create External table IF NOT EXISTS <c:get select="$workflow/@database"/>.<c:get select="$join/@name"/> (<c:iterate select="c:unique($join/table/column,'@name')" var="column"><c:get select="$column/@name"/> <c:get select="$column/@type"/>, </c:iterate> org_id int, org_name varchar(10)<c:iterate select="$join/update" var="update">, <c:get select="$update/@name"/> <c:get select="$update/@type"/> </c:iterate>) row format delimited fields terminated by '\t' lines terminated by '\n' stored as textfile location '/<c:get select="$workflow/@database"/>/<c:get select="$join/@name"/>'</hive>
<c:iterate select="$modcos/modco" var="modco" >
<c:setVariable select=" ceiling(number($join/@slices) * number($modco/@weight))" var="slices" />
<c:if test=" c:lessThan(number($workflow/@maxSlices),$slices) " >
    <c:log severity="warning">[<c:get select="$join/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/> V-> <c:get select="number($workflow/@maxSlices)"/></c:log>
    <c:setVariable select=" number($workflow/@maxSlices) " var="slices"/>
</c:if>
<c:if test=" c:lessThan(1,$slices)" >
	<c:if test=" c:lessThan($slices, number($workflow/@padSlices))" >
	    <c:log severity="warning">[<c:get select="$join/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/> A-> <c:get select="number($workflow/@padSlices)"/></c:log>
    	<c:setVariable select=" number($workflow/@padSlices) " var="slices"/>
	</c:if>
    <c:log severity="info">[<c:get select="$join/@name"/>:<c:get select="$modco/@name" />]  Slices: <c:get select="$slices"/> </c:log>
</c:if>
	<job name="<c:get select="$join/@name" />-Ingest-<c:get select="$modco/@name" />" slices="<c:get select="$slices" />"  splitBy="<c:get select="$join/table/@name"/>.<c:get select="$join/table/column/@name"/>"   source="<c:get select="$modco/@name" />"  sourceDB="<c:get select="$modco/@db" />"  sourceTable="<c:get select="$join/@name"/>"  targetTable="<c:get select="$join/@name"/>"  connect="<c:get select="$modco/@connect"/>"  user="<c:get select="$modco/@user"/>"  pass="<c:get select="$modco/@pass"/>"  prefix="job_<c:get select="$modco/@db" />_<c:get select="$join/@name" />"   >
		<targetDir>/<c:get select="$workflow/@database"/>/<c:get select="$join/@name"/>/<c:get select="$modco/@name" /></targetDir>
		<query><![CDATA[SELECT <c:iterate select="c:unique($join/table/column,'@name')" var="col"><c:get select="$col/../@name"/>.<c:get select="$col/@name"/>, </c:iterate> <c:get select="$modco/@id" /> as "org_id",  '<c:get select="$modco/@name" />' as "org_name" <c:iterate select="$join/update" var="update">, (<c:get select="$update/calc" />) as "<c:get select="$update/@name"/>" </c:iterate> FROM <c:get select="$join/table/@name"/> <c:iterate select="$join/table[@first='false']" var="table" >FULL JOIN <c:get select="$table/@name"/> ON (<c:get select="$join/table/@name"/>.<c:get select="$join/table/@id"/> = <c:get select="$table/@name"/>.<c:get select="$table/@id"/>) </c:iterate>  WHERE ( $CONDITIONS ) ]]></query>
	</job>
</c:iterate>
</c:iterate>
</jobs>
</c:set>
<c:loadContent type="xml" var="jobs">
<c:get select="$sandbox/@jobsSource" />
</c:loadContent>

<c:setVariable select="$jobs/jobs" var="jobs" />

*
*  Assign each job to a flow
*

<c:iterate select="$jobs/job" var="job" >
	<c:if test=" c:lessThan( number($job/@slices) , 2)" >
		<c:set select="$job" name="flow">Full-<c:get select=" c:moduloCounter('fcount',30)" /></c:set>
		<c:set select="$job" name="kind">Full</c:set>
		<c:set select="$workflow/subflow[@key=$job/@flow]" name="kind">Full</c:set>
	</c:if>
	<c:if test=" c:lessThan( 1 , number($job/@slices))" >
		<c:set select="$job" name="flow">Incr-<c:get select=" c:moduloCounter('icount',4)" /></c:set>
		<c:set select="$job" name="kind">Incr</c:set>
		<c:set select="$workflow/subflow[@key=$job/@flow]" name="kind">Incr</c:set>
	</c:if>
    <c:log severity="info"><c:get select="$job/targetDir"/> (<c:get select="$job/@slices"/>) in <c:get select="$job/@flow"/></c:log>
</c:iterate>

*
*  Write the files
*

<c:set select="$tables" name="project">sqoop-<c:get select="$workflow/@database" /></c:set>

<c:iterate select="$workflow/subflow[@kind!='Hive']" var="subflow">
<c:setVariable select=" 'true' " var="first" />
<c:iterate select="$jobs/job[@flow=$subflow/@key]" var="job" >
	<c:if test="$first='false'"  >
		<c:set select="$prev" name="nextJob"><c:get select="$job/@name"/></c:set>
	</c:if>
	<c:if test="$first='true'"  >
		<c:set select="$subflow" name="first"><c:get select="$job/@name"/></c:set>
	</c:if>
	<c:setVariable select=" $job " var="prev" />
	<c:setVariable select=" 'false' " var="first" />
</c:iterate>
<c:setVariable select="$prev" var="lastJob"/>
<c:set select="$prev" name="nextJob"><c:get select="$subflow/@end"/></c:set>
</c:iterate>

<c:iterate select="$workflow/subflow[@kind='Hive']" var="subflow">
<c:setVariable select=" 'true' " var="first" />
<c:iterate select="$subflow/script" var="script" >
	<c:set select="$script" name="qName"><c:get select="$script/@name"/>.q</c:set>
	<c:if test="$first='false'"  >
		<c:set select="$prev" name="nextScript"><c:get select="$script/@name"/></c:set>
	</c:if>
	<c:if test="$first='true'"  >
		<c:set select="$subflow" name="start"><c:get select="$script/@name"/></c:set>
	</c:if>
	<c:setVariable select=" $script " var="prev" />
	<c:setVariable select=" 'false' " var="first" />
</c:iterate>
<c:set select="$prev" name="nextScript">End-Flow</c:set>
</c:iterate>

<c:project  name="{$tables/@project}"  />

<c:file    path="{$tables/@project}/{$workflow/@name}/xfer.bat"  					template="bat.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/runSqoop.sh"  				template="run.sqoop.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/readme.txt"  				template="ingest.description.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/hiveCreate.sh"  			template="hive.sh.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/ingestionState.jsonx"  		template="ingestionState.json.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/yieldIngestProperties.propertiesx"  template="job.properties.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/yieldIngestWorkflow.xml"  	template="oozie.main.workflow.prod" />
<c:iterate select="$workflow/subflow" var="subflow">
<c:choose select="$subflow/@kind">
<c:when test=" 'Hive' ">
<c:file    path="{$tables/@project}/{$workflow/@name}/{$subflow/@workflowXml}.xml"  	template="oozie.hive.workflow.prod" />
</c:when>
<c:when test=" 'Full' ">
<c:file    path="{$tables/@project}/{$workflow/@name}/{$subflow/@workflowXml}.xml"  	template="oozie.full.workflow.prod" />
</c:when>
<c:otherwise>
<c:file    path="{$tables/@project}/{$workflow/@name}/{$subflow/@workflowXml}.xml"  	template="oozie.incr.workflow.prod" />
</c:otherwise>
</c:choose>
< c:setVariable select="$modcos/modco[@name=$subflow/@key]" var="modco" />
</c:iterate>

<c:iterate select="$workflow/subflow[@kind='Hive']/script" var="script">
<c:file    path="{$tables/@project}/{$workflow/@name}/{$script/@qName}"  	template="q.prod"  replace="false" />
</c:iterate>

<c:file    path="{$tables/@project}/{$workflow/@name}/dump.xml"  					template="dump.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/dumpIngest.xml"  			template="dump.ingest.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/dumpJobs.xml"  			template="dump.jobs.prod" />
<c:file    path="{$tables/@project}/{$workflow/@name}/dumpJobsSource.xml"  			template="dump.jobssource.prod" />
	
	
	
