<workflow-app name="Ingest-Incr-3" xmlns="uri:oozie:workflow:0.1">

 	<start to="InvChangeState-Ingest-SPMX"/>


	<decision name="InvChangeState-Ingest-SPMX">
    	<switch>
			<case to="InvChangeState-Ingest-SPMX-DoBase">${ wf:conf('job_MEXICALI_OWNER_InvChangeState_DoBase') eq 'true'}</case>
            <default to="InvChangeState-Ingest-SPMX-IsDelta"/>
        </switch>
    </decision>

	<decision name="InvChangeState-Ingest-SPMX-IsDelta">
    	<switch>
			<case to="InvChangeState-Ingest-SPMX-DoDelta">${ wf:conf('job_MEXICALI_OWNER_InvChangeState_DoDelta') eq 'true'}</case>
            <default to="InvChangeState-Ingest-SPMX-IsIncrement"/>
        </switch>
    </decision>

	<decision name="InvChangeState-Ingest-SPMX-IsIncrement">
    	<switch>
			<case to="InvChangeState-Ingest-SPMX-DoIncrement">${ wf:conf('job_MEXICALI_OWNER_InvChangeState_DoIncrement') eq 'true'}</case>
            <default to="LineInfo-Ingest-SPMX"/>
        </switch>
    </decision>

    <action name="InvChangeState-Ingest-SPMX-DoBase">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_InvChangeState_DoBaseTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InvChangeStateID,InventoryPackID,FromDT,ToDT,InvIsolatedReasonID,Comments,LoginID,OpenedDT,SavedDT,IsEdited,RevisionNo,OriginalLoginID,EditedInvChangeStateID,InvStateID, 1 as "org_id",  'SPMX' as "org_name" , (DatePart(HOUR,InvChangeState.FromDT)) as "Trans_Hours" , (case when DatePart(HOUR,InvChangeState.FromDT) ${lessThan} 7 then cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) -1 else cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) end) as "ShiftStart_DateTime"   FROM dbo.InvChangeState WHERE ( $CONDITIONS )  AND ( InvChangeStateID ${lessThanEqual} ${job_MEXICALI_OWNER_InvChangeState_MaxBaseID} ) AND ( ${job_MEXICALI_OWNER_InvChangeState_MinBaseID} ${lessThanEqual} InvChangeStateID )</arg>
            <arg>--split-by</arg>
            <arg>InvChangeStateID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_InvChangeState_DoBaseTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InvChangeState-Ingest-SPMX-IsDelta"/>
        <error to="InvChangeState-Ingest-SPMX-IsDelta"/>
    </action>
    <action name="InvChangeState-Ingest-SPMX-DoDelta">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_InvChangeState_DoDeltaTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InvChangeStateID,InventoryPackID,FromDT,ToDT,InvIsolatedReasonID,Comments,LoginID,OpenedDT,SavedDT,IsEdited,RevisionNo,OriginalLoginID,EditedInvChangeStateID,InvStateID, 1 as "org_id",  'SPMX' as "org_name" , (DatePart(HOUR,InvChangeState.FromDT)) as "Trans_Hours" , (case when DatePart(HOUR,InvChangeState.FromDT) ${lessThan} 7 then cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) -1 else cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) end) as "ShiftStart_DateTime"   FROM dbo.InvChangeState WHERE ( $CONDITIONS )  AND ( InvChangeStateID ${greaterThanEqual} ${job_MEXICALI_OWNER_InvChangeState_MinDeltaID} )</arg>
            <arg>--split-by</arg>
            <arg>InvChangeStateID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_InvChangeState_DoDeltaTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InvChangeState-Ingest-SPMX-IsIncrement"/>
        <error to="InvChangeState-Ingest-SPMX-IsIncrement"/>
    </action>

    <action name="InvChangeState-Ingest-SPMX-DoIncrement">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_InvChangeState_DoIncrementTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InvChangeStateID,InventoryPackID,FromDT,ToDT,InvIsolatedReasonID,Comments,LoginID,OpenedDT,SavedDT,IsEdited,RevisionNo,OriginalLoginID,EditedInvChangeStateID,InvStateID, 1 as "org_id",  'SPMX' as "org_name" , (DatePart(HOUR,InvChangeState.FromDT)) as "Trans_Hours" , (case when DatePart(HOUR,InvChangeState.FromDT) ${lessThan} 7 then cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) -1 else cast(convert(char(11), InvChangeState.FromDT, 113) as datetime) end) as "ShiftStart_DateTime"   FROM dbo.InvChangeState WHERE ( $CONDITIONS )  AND (  InvChangeStateID ${greaterThanEqual} ${job_MEXICALI_OWNER_InvChangeState_MinIncrementID} ) AND ( ${job_MEXICALI_OWNER_InvChangeState_MaxIncrementID} ${greaterThanEqual} InvChangeStateID )</arg>
            <arg>--split-by</arg>
            <arg>InvChangeStateID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_InvChangeState_DoIncrementTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="LineInfo-Ingest-SPMX"/>
        <error to="LineInfo-Ingest-SPMX"/>
    </action>


	<decision name="LineInfo-Ingest-SPMX">
    	<switch>
			<case to="LineInfo-Ingest-SPMX-DoBase">${ wf:conf('job_MEXICALI_OWNER_LineInfo_DoBase') eq 'true'}</case>
            <default to="LineInfo-Ingest-SPMX-IsDelta"/>
        </switch>
    </decision>

	<decision name="LineInfo-Ingest-SPMX-IsDelta">
    	<switch>
			<case to="LineInfo-Ingest-SPMX-DoDelta">${ wf:conf('job_MEXICALI_OWNER_LineInfo_DoDelta') eq 'true'}</case>
            <default to="LineInfo-Ingest-SPMX-IsIncrement"/>
        </switch>
    </decision>

	<decision name="LineInfo-Ingest-SPMX-IsIncrement">
    	<switch>
			<case to="LineInfo-Ingest-SPMX-DoIncrement">${ wf:conf('job_MEXICALI_OWNER_LineInfo_DoIncrement') eq 'true'}</case>
            <default to="BuildRecord-Ingest-SPTT"/>
        </switch>
    </decision>

    <action name="LineInfo-Ingest-SPMX-DoBase">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_LineInfo_DoBaseTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT LineInfoID,RfLineInfoEventID,LineID,ShiftID,WOID,FromDT,ToDT,rfDayHourPeriodID,TotalTime,ExcludedTime,ScheduledTime,STOperations,STInduced,DTTechnical,DTOperations,DTQuality,DownTime,StopTime,RunTime,NotRunTime,TheoreticalCycleTime,QuantityScrap,QuantityGood,ModifiedDT,LoginID,QuantityIn,TotalInventoryProduced,TotalInventoryReintroduced,NetQuantityProduced,QuantityInLineSpoilage,TotalSpoilage,AccountedSpoilage,TotalInventoryIsolated,ProductionStopJobID,TotalUnitsProduced,BottleNeckMachineStageID,InventoryIn,InterProdStopTime,InProdStopTime,QuantityUnitsIn,QuantityInventoryIn,TotalQuantityProduced,TotalPacksProduced,TotalPacksIsolated,TotalPacksReintroduced,TotalPacksMade,ValidState,LineGroupID,LineGroupShiftID,LineGroupBottleneckID, 1 as "org_id",  'SPMX' as "org_name"   FROM dbo.LineInfo WHERE ( $CONDITIONS )  AND ( LineInfoID ${lessThanEqual} ${job_MEXICALI_OWNER_LineInfo_MaxBaseID} ) AND ( ${job_MEXICALI_OWNER_LineInfo_MinBaseID} ${lessThanEqual} LineInfoID )</arg>
            <arg>--split-by</arg>
            <arg>LineInfoID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_LineInfo_DoBaseTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="LineInfo-Ingest-SPMX-IsDelta"/>
        <error to="LineInfo-Ingest-SPMX-IsDelta"/>
    </action>
    <action name="LineInfo-Ingest-SPMX-DoDelta">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_LineInfo_DoDeltaTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT LineInfoID,RfLineInfoEventID,LineID,ShiftID,WOID,FromDT,ToDT,rfDayHourPeriodID,TotalTime,ExcludedTime,ScheduledTime,STOperations,STInduced,DTTechnical,DTOperations,DTQuality,DownTime,StopTime,RunTime,NotRunTime,TheoreticalCycleTime,QuantityScrap,QuantityGood,ModifiedDT,LoginID,QuantityIn,TotalInventoryProduced,TotalInventoryReintroduced,NetQuantityProduced,QuantityInLineSpoilage,TotalSpoilage,AccountedSpoilage,TotalInventoryIsolated,ProductionStopJobID,TotalUnitsProduced,BottleNeckMachineStageID,InventoryIn,InterProdStopTime,InProdStopTime,QuantityUnitsIn,QuantityInventoryIn,TotalQuantityProduced,TotalPacksProduced,TotalPacksIsolated,TotalPacksReintroduced,TotalPacksMade,ValidState,LineGroupID,LineGroupShiftID,LineGroupBottleneckID, 1 as "org_id",  'SPMX' as "org_name"   FROM dbo.LineInfo WHERE ( $CONDITIONS )  AND ( LineInfoID ${greaterThanEqual} ${job_MEXICALI_OWNER_LineInfo_MinDeltaID} )</arg>
            <arg>--split-by</arg>
            <arg>LineInfoID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_LineInfo_DoDeltaTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="LineInfo-Ingest-SPMX-IsIncrement"/>
        <error to="LineInfo-Ingest-SPMX-IsIncrement"/>
    </action>

    <action name="LineInfo-Ingest-SPMX-DoIncrement">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_MEXICALI_OWNER_LineInfo_DoIncrementTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=MEXICALI_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT LineInfoID,RfLineInfoEventID,LineID,ShiftID,WOID,FromDT,ToDT,rfDayHourPeriodID,TotalTime,ExcludedTime,ScheduledTime,STOperations,STInduced,DTTechnical,DTOperations,DTQuality,DownTime,StopTime,RunTime,NotRunTime,TheoreticalCycleTime,QuantityScrap,QuantityGood,ModifiedDT,LoginID,QuantityIn,TotalInventoryProduced,TotalInventoryReintroduced,NetQuantityProduced,QuantityInLineSpoilage,TotalSpoilage,AccountedSpoilage,TotalInventoryIsolated,ProductionStopJobID,TotalUnitsProduced,BottleNeckMachineStageID,InventoryIn,InterProdStopTime,InProdStopTime,QuantityUnitsIn,QuantityInventoryIn,TotalQuantityProduced,TotalPacksProduced,TotalPacksIsolated,TotalPacksReintroduced,TotalPacksMade,ValidState,LineGroupID,LineGroupShiftID,LineGroupBottleneckID, 1 as "org_id",  'SPMX' as "org_name"   FROM dbo.LineInfo WHERE ( $CONDITIONS )  AND (  LineInfoID ${greaterThanEqual} ${job_MEXICALI_OWNER_LineInfo_MinIncrementID} ) AND ( ${job_MEXICALI_OWNER_LineInfo_MaxIncrementID} ${greaterThanEqual} LineInfoID )</arg>
            <arg>--split-by</arg>
            <arg>LineInfoID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_MEXICALI_OWNER_LineInfo_DoIncrementTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="BuildRecord-Ingest-SPTT"/>
        <error to="BuildRecord-Ingest-SPTT"/>
    </action>


	<decision name="BuildRecord-Ingest-SPTT">
    	<switch>
			<case to="BuildRecord-Ingest-SPTT-DoBase">${ wf:conf('job_TOULOUSE_OWNER_BuildRecord_DoBase') eq 'true'}</case>
            <default to="BuildRecord-Ingest-SPTT-IsDelta"/>
        </switch>
    </decision>

	<decision name="BuildRecord-Ingest-SPTT-IsDelta">
    	<switch>
			<case to="BuildRecord-Ingest-SPTT-DoDelta">${ wf:conf('job_TOULOUSE_OWNER_BuildRecord_DoDelta') eq 'true'}</case>
            <default to="BuildRecord-Ingest-SPTT-IsIncrement"/>
        </switch>
    </decision>

	<decision name="BuildRecord-Ingest-SPTT-IsIncrement">
    	<switch>
			<case to="BuildRecord-Ingest-SPTT-DoIncrement">${ wf:conf('job_TOULOUSE_OWNER_BuildRecord_DoIncrement') eq 'true'}</case>
            <default to="InventoryLabel-Ingest-SPTT"/>
        </switch>
    </decision>

    <action name="BuildRecord-Ingest-SPTT-DoBase">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_BuildRecord_DoBaseTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT BuildRecord.BuildRecordID, BuildRecord.InvPackCreatedID, BuildRecord.InvPackConsumedID, BuildRecord.QuantityUsed, BuildRecord.UnitID, BuildRecord.BuildDT, BuildRecord.IsEdited, BuildRecord.RevisionNo, BuildRecord.BuildMachineStageID, BuildRecord_.Comments, BuildRecord_.LoginID, BuildRecord_.OpenedDT, BuildRecord_.SavedDT, BuildRecord_.EditedBuildRecordID, BuildRecord_.OriginalLoginID, BuildRecord_.Reference1, BuildRecord_.Reference2, BuildRecord_.Reference3, BuildRecord_.Reference4, BuildRecord_.Reference5,  4 as "org_id",  'SPTT' as "org_name"  FROM BuildRecord FULL JOIN BuildRecord_ ON (BuildRecord.BuildRecordID = BuildRecord_.BuildRecordID)   WHERE ( $CONDITIONS )  AND ( BuildRecord.BuildRecordID ${lessThanEqual} ${job_TOULOUSE_OWNER_BuildRecord_MaxBaseID} ) AND ( ${job_TOULOUSE_OWNER_BuildRecord_MinBaseID} ${lessThanEqual} BuildRecord.BuildRecordID )</arg>
            <arg>--split-by</arg>
            <arg>BuildRecord.BuildRecordID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_BuildRecord_DoBaseTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="BuildRecord-Ingest-SPTT-IsDelta"/>
        <error to="BuildRecord-Ingest-SPTT-IsDelta"/>
    </action>
    <action name="BuildRecord-Ingest-SPTT-DoDelta">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_BuildRecord_DoDeltaTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT BuildRecord.BuildRecordID, BuildRecord.InvPackCreatedID, BuildRecord.InvPackConsumedID, BuildRecord.QuantityUsed, BuildRecord.UnitID, BuildRecord.BuildDT, BuildRecord.IsEdited, BuildRecord.RevisionNo, BuildRecord.BuildMachineStageID, BuildRecord_.Comments, BuildRecord_.LoginID, BuildRecord_.OpenedDT, BuildRecord_.SavedDT, BuildRecord_.EditedBuildRecordID, BuildRecord_.OriginalLoginID, BuildRecord_.Reference1, BuildRecord_.Reference2, BuildRecord_.Reference3, BuildRecord_.Reference4, BuildRecord_.Reference5,  4 as "org_id",  'SPTT' as "org_name"  FROM BuildRecord FULL JOIN BuildRecord_ ON (BuildRecord.BuildRecordID = BuildRecord_.BuildRecordID)   WHERE ( $CONDITIONS )  AND ( BuildRecord.BuildRecordID ${greaterThanEqual} ${job_TOULOUSE_OWNER_BuildRecord_MinDeltaID} )</arg>
            <arg>--split-by</arg>
            <arg>BuildRecord.BuildRecordID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_BuildRecord_DoDeltaTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="BuildRecord-Ingest-SPTT-IsIncrement"/>
        <error to="BuildRecord-Ingest-SPTT-IsIncrement"/>
    </action>

    <action name="BuildRecord-Ingest-SPTT-DoIncrement">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_BuildRecord_DoIncrementTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT BuildRecord.BuildRecordID, BuildRecord.InvPackCreatedID, BuildRecord.InvPackConsumedID, BuildRecord.QuantityUsed, BuildRecord.UnitID, BuildRecord.BuildDT, BuildRecord.IsEdited, BuildRecord.RevisionNo, BuildRecord.BuildMachineStageID, BuildRecord_.Comments, BuildRecord_.LoginID, BuildRecord_.OpenedDT, BuildRecord_.SavedDT, BuildRecord_.EditedBuildRecordID, BuildRecord_.OriginalLoginID, BuildRecord_.Reference1, BuildRecord_.Reference2, BuildRecord_.Reference3, BuildRecord_.Reference4, BuildRecord_.Reference5,  4 as "org_id",  'SPTT' as "org_name"  FROM BuildRecord FULL JOIN BuildRecord_ ON (BuildRecord.BuildRecordID = BuildRecord_.BuildRecordID)   WHERE ( $CONDITIONS )  AND (  BuildRecord.BuildRecordID ${greaterThanEqual} ${job_TOULOUSE_OWNER_BuildRecord_MinIncrementID} ) AND ( ${job_TOULOUSE_OWNER_BuildRecord_MaxIncrementID} ${greaterThanEqual} BuildRecord.BuildRecordID )</arg>
            <arg>--split-by</arg>
            <arg>BuildRecord.BuildRecordID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_BuildRecord_DoIncrementTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryLabel-Ingest-SPTT"/>
        <error to="InventoryLabel-Ingest-SPTT"/>
    </action>


	<decision name="InventoryLabel-Ingest-SPTT">
    	<switch>
			<case to="InventoryLabel-Ingest-SPTT-DoBase">${ wf:conf('job_TOULOUSE_OWNER_InventoryLabel_DoBase') eq 'true'}</case>
            <default to="InventoryLabel-Ingest-SPTT-IsDelta"/>
        </switch>
    </decision>

	<decision name="InventoryLabel-Ingest-SPTT-IsDelta">
    	<switch>
			<case to="InventoryLabel-Ingest-SPTT-DoDelta">${ wf:conf('job_TOULOUSE_OWNER_InventoryLabel_DoDelta') eq 'true'}</case>
            <default to="InventoryLabel-Ingest-SPTT-IsIncrement"/>
        </switch>
    </decision>

	<decision name="InventoryLabel-Ingest-SPTT-IsIncrement">
    	<switch>
			<case to="InventoryLabel-Ingest-SPTT-DoIncrement">${ wf:conf('job_TOULOUSE_OWNER_InventoryLabel_DoIncrement') eq 'true'}</case>
            <default to="InventoryPack-Ingest-SPTT"/>
        </switch>
    </decision>

    <action name="InventoryLabel-Ingest-SPTT-DoBase">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryLabel_DoBaseTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryLabel.InventoryLabelID, InventoryLabel.MachineStage, InventoryLabel.PartNumber, InventoryLabel.PartType, InventoryLabel.QuantityOrdered, InventoryLabel.WONumber, InventoryLabel.InventoryPackNo, InventoryLabel.CreatedFromDT, InventoryLabel.Quantity, InventoryLabel.Unit, InventoryLabel.Line, InventoryLabel.LabelTemplate, InventoryLabel.LabelsPerInventoryPack, InventoryLabel.ItemsPerLayer, InventoryLabel.LayersPerInventoryPack, InventoryLabel.PrinterURL, InventoryLabel.PrintedDT, InventoryLabel.ItemsPerInventoryPack, InventoryLabel.ScannedDT, InventoryLabel.IsCancelled, InventoryLabel.OrderQuantityPacks, InventoryLabel.LineShortName, InventoryLabel.PackNo, InventoryLabel.IsReprint, InventoryLabel.PartDescription, InventoryLabel.LabelSaveDirectory, InventoryLabel.JobID, InventoryLabel.IsPrintLandscape, InventoryLabel.NoCopies, InventoryLabel_.LabelColour, InventoryLabel_.EANCode, InventoryLabel_.CusNum, InventoryLabel_.PackingCode, InventoryLabel_.CustomerPartNo, InventoryLabel_.CustomerPartDescription, InventoryLabel_.LabelText1, InventoryLabel_.LabelText2, InventoryLabel_.LabelText3, InventoryLabel_.Customer, InventoryLabel_.Address1, InventoryLabel_.Address2, InventoryLabel_.City, InventoryLabel_.County, InventoryLabel_.PostCode, InventoryLabel_.Country, InventoryLabel_custom.InventoryPackID,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryLabel FULL JOIN InventoryLabel_ ON (InventoryLabel.InventoryLabelID = InventoryLabel_.InventoryLabelID) FULL JOIN InventoryLabel_custom ON (InventoryLabel.InventoryLabelID = InventoryLabel_custom.InventoryLabelID)   WHERE ( $CONDITIONS )  AND ( InventoryLabel.InventoryLabelID ${lessThanEqual} ${job_TOULOUSE_OWNER_InventoryLabel_MaxBaseID} ) AND ( ${job_TOULOUSE_OWNER_InventoryLabel_MinBaseID} ${lessThanEqual} InventoryLabel.InventoryLabelID )</arg>
            <arg>--split-by</arg>
            <arg>InventoryLabel.InventoryLabelID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryLabel_DoBaseTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryLabel-Ingest-SPTT-IsDelta"/>
        <error to="InventoryLabel-Ingest-SPTT-IsDelta"/>
    </action>
    <action name="InventoryLabel-Ingest-SPTT-DoDelta">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryLabel_DoDeltaTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryLabel.InventoryLabelID, InventoryLabel.MachineStage, InventoryLabel.PartNumber, InventoryLabel.PartType, InventoryLabel.QuantityOrdered, InventoryLabel.WONumber, InventoryLabel.InventoryPackNo, InventoryLabel.CreatedFromDT, InventoryLabel.Quantity, InventoryLabel.Unit, InventoryLabel.Line, InventoryLabel.LabelTemplate, InventoryLabel.LabelsPerInventoryPack, InventoryLabel.ItemsPerLayer, InventoryLabel.LayersPerInventoryPack, InventoryLabel.PrinterURL, InventoryLabel.PrintedDT, InventoryLabel.ItemsPerInventoryPack, InventoryLabel.ScannedDT, InventoryLabel.IsCancelled, InventoryLabel.OrderQuantityPacks, InventoryLabel.LineShortName, InventoryLabel.PackNo, InventoryLabel.IsReprint, InventoryLabel.PartDescription, InventoryLabel.LabelSaveDirectory, InventoryLabel.JobID, InventoryLabel.IsPrintLandscape, InventoryLabel.NoCopies, InventoryLabel_.LabelColour, InventoryLabel_.EANCode, InventoryLabel_.CusNum, InventoryLabel_.PackingCode, InventoryLabel_.CustomerPartNo, InventoryLabel_.CustomerPartDescription, InventoryLabel_.LabelText1, InventoryLabel_.LabelText2, InventoryLabel_.LabelText3, InventoryLabel_.Customer, InventoryLabel_.Address1, InventoryLabel_.Address2, InventoryLabel_.City, InventoryLabel_.County, InventoryLabel_.PostCode, InventoryLabel_.Country, InventoryLabel_custom.InventoryPackID,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryLabel FULL JOIN InventoryLabel_ ON (InventoryLabel.InventoryLabelID = InventoryLabel_.InventoryLabelID) FULL JOIN InventoryLabel_custom ON (InventoryLabel.InventoryLabelID = InventoryLabel_custom.InventoryLabelID)   WHERE ( $CONDITIONS )  AND ( InventoryLabel.InventoryLabelID ${greaterThanEqual} ${job_TOULOUSE_OWNER_InventoryLabel_MinDeltaID} )</arg>
            <arg>--split-by</arg>
            <arg>InventoryLabel.InventoryLabelID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryLabel_DoDeltaTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryLabel-Ingest-SPTT-IsIncrement"/>
        <error to="InventoryLabel-Ingest-SPTT-IsIncrement"/>
    </action>

    <action name="InventoryLabel-Ingest-SPTT-DoIncrement">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryLabel_DoIncrementTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryLabel.InventoryLabelID, InventoryLabel.MachineStage, InventoryLabel.PartNumber, InventoryLabel.PartType, InventoryLabel.QuantityOrdered, InventoryLabel.WONumber, InventoryLabel.InventoryPackNo, InventoryLabel.CreatedFromDT, InventoryLabel.Quantity, InventoryLabel.Unit, InventoryLabel.Line, InventoryLabel.LabelTemplate, InventoryLabel.LabelsPerInventoryPack, InventoryLabel.ItemsPerLayer, InventoryLabel.LayersPerInventoryPack, InventoryLabel.PrinterURL, InventoryLabel.PrintedDT, InventoryLabel.ItemsPerInventoryPack, InventoryLabel.ScannedDT, InventoryLabel.IsCancelled, InventoryLabel.OrderQuantityPacks, InventoryLabel.LineShortName, InventoryLabel.PackNo, InventoryLabel.IsReprint, InventoryLabel.PartDescription, InventoryLabel.LabelSaveDirectory, InventoryLabel.JobID, InventoryLabel.IsPrintLandscape, InventoryLabel.NoCopies, InventoryLabel_.LabelColour, InventoryLabel_.EANCode, InventoryLabel_.CusNum, InventoryLabel_.PackingCode, InventoryLabel_.CustomerPartNo, InventoryLabel_.CustomerPartDescription, InventoryLabel_.LabelText1, InventoryLabel_.LabelText2, InventoryLabel_.LabelText3, InventoryLabel_.Customer, InventoryLabel_.Address1, InventoryLabel_.Address2, InventoryLabel_.City, InventoryLabel_.County, InventoryLabel_.PostCode, InventoryLabel_.Country, InventoryLabel_custom.InventoryPackID,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryLabel FULL JOIN InventoryLabel_ ON (InventoryLabel.InventoryLabelID = InventoryLabel_.InventoryLabelID) FULL JOIN InventoryLabel_custom ON (InventoryLabel.InventoryLabelID = InventoryLabel_custom.InventoryLabelID)   WHERE ( $CONDITIONS )  AND (  InventoryLabel.InventoryLabelID ${greaterThanEqual} ${job_TOULOUSE_OWNER_InventoryLabel_MinIncrementID} ) AND ( ${job_TOULOUSE_OWNER_InventoryLabel_MaxIncrementID} ${greaterThanEqual} InventoryLabel.InventoryLabelID )</arg>
            <arg>--split-by</arg>
            <arg>InventoryLabel.InventoryLabelID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryLabel_DoIncrementTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryPack-Ingest-SPTT"/>
        <error to="InventoryPack-Ingest-SPTT"/>
    </action>


	<decision name="InventoryPack-Ingest-SPTT">
    	<switch>
			<case to="InventoryPack-Ingest-SPTT-DoBase">${ wf:conf('job_TOULOUSE_OWNER_InventoryPack_DoBase') eq 'true'}</case>
            <default to="InventoryPack-Ingest-SPTT-IsDelta"/>
        </switch>
    </decision>

	<decision name="InventoryPack-Ingest-SPTT-IsDelta">
    	<switch>
			<case to="InventoryPack-Ingest-SPTT-DoDelta">${ wf:conf('job_TOULOUSE_OWNER_InventoryPack_DoDelta') eq 'true'}</case>
            <default to="InventoryPack-Ingest-SPTT-IsIncrement"/>
        </switch>
    </decision>

	<decision name="InventoryPack-Ingest-SPTT-IsIncrement">
    	<switch>
			<case to="InventoryPack-Ingest-SPTT-DoIncrement">${ wf:conf('job_TOULOUSE_OWNER_InventoryPack_DoIncrement') eq 'true'}</case>
            <default to="End-Incr-3-Ingest"/>
        </switch>
    </decision>

    <action name="InventoryPack-Ingest-SPTT-DoBase">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryPack_DoBaseTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryPack.InventoryPackID, InventoryPack.InventoryPackNo, InventoryPack.WOID, InventoryPack.JobID, InventoryPack.CreatedFromDT, InventoryPack.CreatedToDT, InventoryPack.CreatedOnMachineStageID, InventoryPack.IsEdited, InventoryPack.RevisionNo, InventoryPack.PartID, InventoryPack.Quantity, InventoryPack.UnitID, InventoryPack.Ignored, InventoryPack.InventoryPackIndex, InventoryPack.CustomerUniqueKey, InventoryPack.ReceivedDT, InventoryPack.BirthDT, InventoryPack.LastBuildRecordID, InventoryPack.msrepl_tran_version, InventoryPack.CurrentQuantity, InventoryPack.QuantityAdjustment, InventoryPack.PositionNumber, InventoryPack.LocationID, InventoryPack.InvStateID, InventoryPack.LocationFromDT, InventoryPack_.Comments, InventoryPack_.LoginID, InventoryPack_.OpenedDT, InventoryPack_.SavedDT, InventoryPack_.OriginalLoginID, InventoryPack_.EditedInventoryPackID, InventoryPack_.Reference1, InventoryPack_.Reference2, InventoryPack_.Reference3, InventoryPack_.Reference4, InventoryPack_.Reference5, InventoryPack_.Reference6, InventoryPack_.Reference7, InventoryPack_.Reference8, InventoryPack_.Reference9, InventoryPack_.Reference10, InventoryPack_.SupplierID, InventoryPack_.SupplierReference, InventoryPack_.UseByDT, InventoryPack_.UseAfterDT, InventoryPack_Custom.Txn_date, InventoryPack_Custom.OracleStatus, InventoryPack_Custom.IntendedWOID, InventoryPack_Custom.FinalWOID, InventoryPack_Custom.OriginalQty, InventoryPack_Custom.Seq_Id, InventoryPack_Custom.From_Subinventory, InventoryPack_Custom.From_Locator, InventoryPack_Custom.To_Subinventory, InventoryPack_Custom.To_Locator, InventoryPack_Custom.ScrappedShiftID, InventoryPack_Custom.LastInventoryLabelID, InventoryPack_Custom.ScrapLocationID, InventoryPack_Custom.MachineLocationID, InventoryPack_Custom.ScrapReasonID, InventoryPack_Custom.ModuleInfoID, InventoryPack_Custom.ResealedDT,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryPack FULL JOIN InventoryPack_ ON (InventoryPack.InventoryPackID = InventoryPack_.InventoryPackID) FULL JOIN InventoryPack_Custom ON (InventoryPack.InventoryPackID = InventoryPack_Custom.InventoryPackId)   WHERE ( $CONDITIONS )  AND ( InventoryPack.InventoryPackID ${lessThanEqual} ${job_TOULOUSE_OWNER_InventoryPack_MaxBaseID} ) AND ( ${job_TOULOUSE_OWNER_InventoryPack_MinBaseID} ${lessThanEqual} InventoryPack.InventoryPackID )</arg>
            <arg>--split-by</arg>
            <arg>InventoryPack.InventoryPackID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryPack_DoBaseTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryPack-Ingest-SPTT-IsDelta"/>
        <error to="InventoryPack-Ingest-SPTT-IsDelta"/>
    </action>
    <action name="InventoryPack-Ingest-SPTT-DoDelta">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryPack_DoDeltaTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryPack.InventoryPackID, InventoryPack.InventoryPackNo, InventoryPack.WOID, InventoryPack.JobID, InventoryPack.CreatedFromDT, InventoryPack.CreatedToDT, InventoryPack.CreatedOnMachineStageID, InventoryPack.IsEdited, InventoryPack.RevisionNo, InventoryPack.PartID, InventoryPack.Quantity, InventoryPack.UnitID, InventoryPack.Ignored, InventoryPack.InventoryPackIndex, InventoryPack.CustomerUniqueKey, InventoryPack.ReceivedDT, InventoryPack.BirthDT, InventoryPack.LastBuildRecordID, InventoryPack.msrepl_tran_version, InventoryPack.CurrentQuantity, InventoryPack.QuantityAdjustment, InventoryPack.PositionNumber, InventoryPack.LocationID, InventoryPack.InvStateID, InventoryPack.LocationFromDT, InventoryPack_.Comments, InventoryPack_.LoginID, InventoryPack_.OpenedDT, InventoryPack_.SavedDT, InventoryPack_.OriginalLoginID, InventoryPack_.EditedInventoryPackID, InventoryPack_.Reference1, InventoryPack_.Reference2, InventoryPack_.Reference3, InventoryPack_.Reference4, InventoryPack_.Reference5, InventoryPack_.Reference6, InventoryPack_.Reference7, InventoryPack_.Reference8, InventoryPack_.Reference9, InventoryPack_.Reference10, InventoryPack_.SupplierID, InventoryPack_.SupplierReference, InventoryPack_.UseByDT, InventoryPack_.UseAfterDT, InventoryPack_Custom.Txn_date, InventoryPack_Custom.OracleStatus, InventoryPack_Custom.IntendedWOID, InventoryPack_Custom.FinalWOID, InventoryPack_Custom.OriginalQty, InventoryPack_Custom.Seq_Id, InventoryPack_Custom.From_Subinventory, InventoryPack_Custom.From_Locator, InventoryPack_Custom.To_Subinventory, InventoryPack_Custom.To_Locator, InventoryPack_Custom.ScrappedShiftID, InventoryPack_Custom.LastInventoryLabelID, InventoryPack_Custom.ScrapLocationID, InventoryPack_Custom.MachineLocationID, InventoryPack_Custom.ScrapReasonID, InventoryPack_Custom.ModuleInfoID, InventoryPack_Custom.ResealedDT,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryPack FULL JOIN InventoryPack_ ON (InventoryPack.InventoryPackID = InventoryPack_.InventoryPackID) FULL JOIN InventoryPack_Custom ON (InventoryPack.InventoryPackID = InventoryPack_Custom.InventoryPackId)   WHERE ( $CONDITIONS )  AND ( InventoryPack.InventoryPackID ${greaterThanEqual} ${job_TOULOUSE_OWNER_InventoryPack_MinDeltaID} )</arg>
            <arg>--split-by</arg>
            <arg>InventoryPack.InventoryPackID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryPack_DoDeltaTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="InventoryPack-Ingest-SPTT-IsIncrement"/>
        <error to="InventoryPack-Ingest-SPTT-IsIncrement"/>
    </action>

    <action name="InventoryPack-Ingest-SPTT-DoIncrement">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
			<prepare>
            	<delete path="${job_TOULOUSE_OWNER_InventoryPack_DoIncrementTarget}" />
            </prepare>         	
            <arg>import</arg>
         	<arg>--connect</arg>
            <arg>jdbc:sqlserver://172.23.236.90:1433;database=TOULOUSE_OWNER</arg>
            <arg>--username</arg>
            <arg>usrSqoop</arg>
            <arg>--password</arg>
            <arg>AXm6Sn6#o</arg>
            <arg>--query</arg>
            <arg>SELECT InventoryPack.InventoryPackID, InventoryPack.InventoryPackNo, InventoryPack.WOID, InventoryPack.JobID, InventoryPack.CreatedFromDT, InventoryPack.CreatedToDT, InventoryPack.CreatedOnMachineStageID, InventoryPack.IsEdited, InventoryPack.RevisionNo, InventoryPack.PartID, InventoryPack.Quantity, InventoryPack.UnitID, InventoryPack.Ignored, InventoryPack.InventoryPackIndex, InventoryPack.CustomerUniqueKey, InventoryPack.ReceivedDT, InventoryPack.BirthDT, InventoryPack.LastBuildRecordID, InventoryPack.msrepl_tran_version, InventoryPack.CurrentQuantity, InventoryPack.QuantityAdjustment, InventoryPack.PositionNumber, InventoryPack.LocationID, InventoryPack.InvStateID, InventoryPack.LocationFromDT, InventoryPack_.Comments, InventoryPack_.LoginID, InventoryPack_.OpenedDT, InventoryPack_.SavedDT, InventoryPack_.OriginalLoginID, InventoryPack_.EditedInventoryPackID, InventoryPack_.Reference1, InventoryPack_.Reference2, InventoryPack_.Reference3, InventoryPack_.Reference4, InventoryPack_.Reference5, InventoryPack_.Reference6, InventoryPack_.Reference7, InventoryPack_.Reference8, InventoryPack_.Reference9, InventoryPack_.Reference10, InventoryPack_.SupplierID, InventoryPack_.SupplierReference, InventoryPack_.UseByDT, InventoryPack_.UseAfterDT, InventoryPack_Custom.Txn_date, InventoryPack_Custom.OracleStatus, InventoryPack_Custom.IntendedWOID, InventoryPack_Custom.FinalWOID, InventoryPack_Custom.OriginalQty, InventoryPack_Custom.Seq_Id, InventoryPack_Custom.From_Subinventory, InventoryPack_Custom.From_Locator, InventoryPack_Custom.To_Subinventory, InventoryPack_Custom.To_Locator, InventoryPack_Custom.ScrappedShiftID, InventoryPack_Custom.LastInventoryLabelID, InventoryPack_Custom.ScrapLocationID, InventoryPack_Custom.MachineLocationID, InventoryPack_Custom.ScrapReasonID, InventoryPack_Custom.ModuleInfoID, InventoryPack_Custom.ResealedDT,  4 as "org_id",  'SPTT' as "org_name"  FROM InventoryPack FULL JOIN InventoryPack_ ON (InventoryPack.InventoryPackID = InventoryPack_.InventoryPackID) FULL JOIN InventoryPack_Custom ON (InventoryPack.InventoryPackID = InventoryPack_Custom.InventoryPackId)   WHERE ( $CONDITIONS )  AND (  InventoryPack.InventoryPackID ${greaterThanEqual} ${job_TOULOUSE_OWNER_InventoryPack_MinIncrementID} ) AND ( ${job_TOULOUSE_OWNER_InventoryPack_MaxIncrementID} ${greaterThanEqual} InventoryPack.InventoryPackID )</arg>
            <arg>--split-by</arg>
            <arg>InventoryPack.InventoryPackID</arg>
            <arg>--num-mappers</arg>
            <arg>6</arg>
            <arg>--target-dir</arg>
            <arg>${job_TOULOUSE_OWNER_InventoryPack_DoIncrementTarget}</arg>
            <arg>--fields-terminated-by</arg>
            <arg>\t</arg>
            <arg>--direct</arg>
            <arg>--</arg>
            <arg>--schema</arg>
            <arg>dbo</arg>
            <arg>-validate</arg>
        </sqoop>
        <ok to="End-Incr-3-Ingest"/>
        <error to="End-Incr-3-Ingest"/>
    </action>


	<end name="End-Incr-3-Ingest"/>
</workflow-app>
